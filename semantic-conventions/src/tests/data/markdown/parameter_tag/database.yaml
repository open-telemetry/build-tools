# Note: this spec is part of an open PR (https://github.com/open-telemetry/opentelemetry-specification/pull/575, currently at commit 1ffcead5a5) and subject to change.
groups:
  - id: db
    type: span
    prefix: db
    brief: >
      This document defines the attributes used to
      perform database client calls.
    span_kind: client
    attributes:
      - id: type
        stability: experimental
        tag: connection-level
        type:
          allow_custom_values: true
          members:
            - id: sql
              value: 'sql'
              brief: 'A SQL database'
              stability: experimental
            - id: cassandra
              value: 'cassandra'
              brief: 'Apache Cassandra'
              stability: experimental
            - id: hbase
              value: 'hbase'
              brief: 'Apache HBase'
              stability: experimental
            - id: mongodb
              value: 'mongodb'
              brief: 'MongoDB'
              stability: experimental
            - id: redis
              value: 'redis'
              brief: 'Redis'
              stability: experimental
            - id: couchbase
              value: 'couchbase'
              brief: 'Couchbase'
              stability: experimental
            - id: couchdb
              value: 'couchdb'
              brief: 'CouchDB'
              stability: experimental
        requirement_level: required
        brief: >
          Database type. For any SQL database, "sql".
          For others, the lower-case database category.
      - id: dbms
        stability: experimental
        type:
          allow_custom_values: true
          members:
            - id: mssql
              value: 'mssql'
              brief: 'Microsoft SQL Server'
              stability: experimental
            - id: mysql
              value: 'mysql'
              brief: 'MySQL'
              stability: experimental
            - id: oracle
              value: 'oracle'
              brief: 'Oracle'
              stability: experimental
            - id: db2
              value: 'db2'
              brief: 'IBM Db2'
              stability: experimental
            - id: postgresql
              value: 'postgresql'
              brief: 'PostgreSQL'
              stability: experimental
            - id: redshift
              value: 'redshift'
              brief: 'Amazon Redshift'
              stability: experimental
            - id: hive
              value: 'hive'
              brief: 'Apache Hive'
              stability: experimental
            - id: cloudscape
              value: 'cloudscape'
              brief: 'Cloudscape'
              stability: experimental
            - id: hsqlsb
              value: 'hsqlsb'
              brief: 'HyperSQL DataBase'
              stability: experimental
            - id: progress
              value: 'progress'
              brief: 'Progress Database'
              stability: experimental
            - id: maxdb
              value: 'maxdb'
              brief: 'SAP MaxDB'
              stability: experimental
            - id: hanadb
              value: 'hanadb'
              brief: 'SAP HANA'
              stability: experimental
            - id: ingres
              value: 'ingres'
              brief: 'Ingres'
              stability: experimental
            - id: firstsql
              value: 'firstsql'
              brief: 'FirstSQL'
              stability: experimental
            - id: edb
              value: 'edb'
              brief: 'EnterpriseDB'
              stability: experimental
            - id: cache
              value: 'cache'
              brief: 'InterSystems CachÃ©'
              stability: experimental
            - id: adabas
              value: 'adabas'
              brief: 'Adabas (Adaptable Database System)'
              stability: experimental
            - id: firebird
              value: 'firebird'
              brief: 'Firebird'
              stability: experimental
            - id: derby
              value: 'derby'
              brief: 'Apache Derby'
              stability: experimental
            - id: filemaker
              value: 'filemaker'
              brief: 'FileMaker'
              stability: experimental
            - id: informix
              value: 'informix'
              brief: 'Informix'
              stability: experimental
            - id: instantdb
              value: 'instantdb'
              brief: 'InstantDB'
              stability: experimental
            - id: interbase
              value: 'interbase'
              brief: 'InterBase'
              stability: experimental
            - id: mariadb
              value: 'mariadb'
              brief: 'MariaDB'
              stability: experimental
            - id: netezza
              value: 'netezza'
              brief: 'Netezza'
              stability: experimental
            - id: pervasive
              value: 'pervasive'
              brief: 'Pervasive PSQL'
              stability: experimental
            - id: pointbase
              value: 'pointbase'
              brief: 'PointBase'
              stability: experimental
            - id: sqlite
              value: 'sqlite'
              brief: 'SQLite'
              stability: experimental
            - id: sybase
              value: 'sybase'
              brief: 'Sybase'
              stability: experimental
            - id: teradata
              value: 'teradata'
              brief: 'Teradata'
              stability: experimental
            - id: vertica
              value: 'vertica'
              brief: 'Vertica'
              stability: experimental
            - id: h2
              value: 'h2'
              brief: 'H2'
              stability: experimental
            - id: coldfusion
              value: 'coldfusion'
              brief: 'ColdFusion IMQ'
              stability: experimental
        requirement_level:
          recommended: for `db.type="sql"`
        brief: >
          An identifier for the DBMS (database management system) product
      - id: connection_string
        stability: experimental
        tag: connection-level
        type: string
        note: 'It is recommended to remove embedded credentials.'
        brief: >
          The connection string used to connect to the database.
        examples: 'Server=(localdb)\v11.0;Integrated Security=true;'
      - id: user
        stability: experimental
        tag: connection-level
        type: string
        brief: >
          Username for accessing the database.
        examples: ['readonly_user', 'reporting_user']
      - id: mssql.instance_name
        stability: experimental
        type: string
        note: >
          If setting a `db.mssql.instance_name`, `net.peer.port` is no longer
          required (but still recommended if non-standard).
        brief: >
          The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15)
          connecting to. This name is used to determine the port of a named instance.
        examples: 'MSSQLSERVER'
      - id: jdbc.driver_classname
        stability: experimental
        type: string
        brief: >
          The fully-qualified class name of the JDBC driver used to connect.
        examples: ['org.postgresql.Driver', 'com.microsoft.sqlserver.jdbc.SQLServerDriver']
      - id: name
        stability: experimental
        type: string
        requirement_level:
          conditionally_required: >
            if applicable and no more-specific attribute is defined.
        brief: >
          If no tech-specific attribute is defined below, this attribute is used to report the name
          of the database being accessed. For commands that switch the database, this should be set
          to the target database (even if the command fails).
        note:
          In some SQL databases, the database name to be used is called "schema name".
          Redis does not have a database name to used here.
        examples: [ 'customers', 'master' ]
      - id: statement
        stability: experimental
        type: string
        requirement_level:
          conditionally_required: if applicable.
        note: The value may be sanitized to exclude sensitive information.
        brief: >
          A database statement for the given database type.
        examples: ['SELECT * FROM wuser_table', 'SET mykey "WuValue"']
      - id: operation
        stability: experimental
        type: string
        requirement_level:
          conditionally_required: if `db.statement` is not applicable.
        brief: >
          The type of operation that is executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations)
          such as `findAndModify`. While it would semantically make sense to set this, e.g., to a SQL
          keyword like `SELECT` or `INSERT`, it is not recommended to attempt any client-side parsing
          of `db.statement` just to get this property (the back end can do that if required).
        examples: ['findAndModify']
      - ref: net.peer.name
        tag: connection-level
      - ref: net.peer.ip
        tag: connection-level
      - ref: net.peer.port
        tag: connection-level
  - id: db.cassandra
    type: span
    prefix: db.cassandra
    extends: db
    brief: >
      Call-level attributes for Cassandra
    attributes:
      - id: keyspace
        stability: experimental
        type: string
        requirement_level: required
        brief: >
          The name of the keyspace being accessed. To be used instead of the general `db.name` attribute.
        examples: 'mykeyspace'
  - id: db.hbase
    type: span
    prefix: db.hbase
    extends: db
    brief: >
      Call-level attributes for Apache HBase
    attributes:
      - id: namespace
        stability: experimental
        type: string
        requirement_level: required
        brief: >
          The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed.
          To be used instead of the general `db.name` attribute.
        examples: 'default'
  - id: db.mongodb
    type: span
    prefix: db.mongodb
    extends: db
    brief: >
      Call-level attributes for MongoDB
    attributes:
      - id: collection
        stability: experimental
        type: string
        requirement_level: required
        brief: >
          The collection being accessed within the database stated in `db.name`.
        examples: [ 'customers', 'products' ]
